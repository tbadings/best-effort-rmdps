mdp

module grid
    x : [0..2];
    y : [0..2];
    [right] x=0 & y=0 -> [0.756, 0.756]: (x'=1) & (y'=0) + [0.244, 0.244]: (x'=0) & (y'=0);
    [right_be] x=0 & y=0 -> [0.756, 0.885]: (x'=1) & (y'=0) + [0.115, 0.244]: (x'=0) & (y'=0);
    [right] x=0 & y=1 -> [0.743, 0.743]: (x'=1) & (y'=1) + [0.257, 0.257]: (x'=0) & (y'=1);
    [right_be] x=0 & y=1 -> [0.743, 0.897]: (x'=1) & (y'=1) + [0.10300000000000001, 0.257]: (x'=0) & (y'=1);
    [right] x=0 & y=2 -> [0.702, 0.702]: (x'=1) & (y'=2) + [0.298, 0.298]: (x'=0) & (y'=2);
    [right_be] x=0 & y=2 -> [0.702, 0.863]: (x'=1) & (y'=2) + [0.137, 0.298]: (x'=0) & (y'=2);
    [down_be] x=1 & y=0 -> [0.786, 0.886]: (x'=1) & (y'=1) + [0.114, 0.214]: (x'=1) & (y'=0);
    [down] x=1 & y=0 -> [0.786, 0.786]: (x'=1) & (y'=1) + [0.214, 0.214]: (x'=1) & (y'=0);
    [right] x=1 & y=1 -> [0.798, 0.798]: (x'=2) & (y'=1) + [0.202, 0.202]: (x'=1) & (y'=1);
    [right_be] x=1 & y=1 -> [0.798, 0.893]: (x'=2) & (y'=1) + [0.10700000000000001, 0.202]: (x'=1) & (y'=1);
    [right_be] x=1 & y=2 -> [0.733, 0.944]: (x'=2) & (y'=2) + [0.05600000000000001, 0.267]: (x'=1) & (y'=2);
    [right] x=1 & y=2 -> [0.733, 0.733]: (x'=2) & (y'=2) + [0.267, 0.267]: (x'=1) & (y'=2);
    [down_be] x=2 & y=0 -> [0.7010000000000001, 0.906]: (x'=2) & (y'=1) + [0.094, 0.299]: (x'=2) & (y'=0);
    [down] x=2 & y=0 -> [0.7010000000000001, 0.7010000000000001]: (x'=2) & (y'=1) + [0.299, 0.299]: (x'=2) & (y'=0);
    [down_be] x=2 & y=1 -> [0.753, 0.925]: (x'=2) & (y'=2) + [0.07500000000000001, 0.247]: (x'=2) & (y'=1);
    [down] x=2 & y=1 -> [0.753, 0.753]: (x'=2) & (y'=2) + [0.247, 0.247]: (x'=2) & (y'=1);
    [pass] x=2 & y=2 -> [1.0, 1.0]: (x'=2) & (y'=2);
endmodule

// initial states
init true endinit

// reward structure (number of steps to reach the target)
rewards
    [right] true : 1;
    [right_be] true : 1;
    [down] true : 1;
    [down_be] true : 1;
    [pass] true : 0;
endrewards

label "goal" = x=2 & y=2;